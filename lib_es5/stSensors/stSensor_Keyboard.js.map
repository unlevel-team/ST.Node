{"version":3,"sources":["stSensors/stSensor_Keyboard.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAI,eAAe,QAAQ,+BAAR,CAAnB;;AAEA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;;AAEA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;;;;;IAMM,iB;;;AAEL,4BAAY,MAAZ,EAAoB;AAAA;;AAAA,mGACb,MADa;;AAGnB,QAAK,WAAL,GAAmB,IAAnB;AACA,QAAK,gBAAL,GAAwB,MAAxB;;AAJmB;AAMnB;;;;;;;;;+BAKY;;AAEZ,OAAI,WAAW,IAAf;;AAEA,YAAS,WAAT,GAAuB,MAAM,KAAN,CAAY;;AAGjC,iBAAa;AACX,eAAU,EAAE,SAAS,UAAX;AADC,KAHoB;;AAOjC,aAAS;AACP,eAAU,EAAE,QAAQ,UAAV;AADH,KAPwB;;AAWjC,UAAM,cAAS,EAAT,EAAa;;;;;;;;;;AAYjB,QAAG,QAAH,CAAY,EAAZ,CAAe,IAAf,EAAqB,YAAW;AAC/B,UAAI,SAAS,gBAAT,IAA6B,SAAjC,EAA4C;AAC5C;AACA;AACG,cAAQ,GAAR,CAAY,KAAZ;AACA,eAAS,YAAT,CAAsB,IAAtB,CAA2B,SAAS,SAAT,CAAmB,MAAnB,CAA0B,UAArD,EAAiE,EAAC,OAAM,IAAP,EAAjE;AACD,MANH;;AAQE,QAAG,QAAH,CAAY,EAAZ,CAAe,MAAf,EAAuB,YAAW;AACjC,UAAI,SAAS,gBAAT,IAA6B,SAAjC,EAA4C;AAC9C;AACA;AACG,cAAQ,GAAR,CAAY,OAAZ;AACA,eAAS,YAAT,CAAsB,IAAtB,CAA2B,SAAS,SAAT,CAAmB,MAAnB,CAA0B,UAArD,EAAiE,EAAC,OAAM,MAAP,EAAjE;AACD,MAND;;AAQA,QAAG,QAAH,CAAY,EAAZ,CAAe,MAAf,EAAuB,YAAW;AACjC,UAAI,SAAS,gBAAT,IAA6B,SAAjC,EAA4C;AAC9C;AACA;AACG,cAAQ,GAAR,CAAY,OAAZ;AACA,eAAS,YAAT,CAAsB,IAAtB,CAA2B,SAAS,SAAT,CAAmB,MAAnB,CAA0B,UAArD,EAAiE,EAAC,OAAM,MAAP,EAAjE;AACD,MAND;;AAQA,QAAG,QAAH,CAAY,EAAZ,CAAe,OAAf,EAAwB,YAAW;AAClC,UAAI,SAAS,gBAAT,IAA6B,SAAjC,EAA4C;AAC9C;AACA;AACG,cAAQ,GAAR,CAAY,QAAZ;AACA,eAAS,YAAT,CAAsB,IAAtB,CAA2B,SAAS,SAAT,CAAmB,MAAnB,CAA0B,UAArD,EAAiE,EAAC,OAAM,OAAP,EAAjE;AACD,MAND;AAOH;;AAtDgC,IAAZ,CAAvB;;AA0DA;AACA,QAAK,gBAAL,GAAwB,OAAxB;AAEA;;;gCAGa;AACb,OAAI,KAAK,gBAAL,IAAyB,OAA7B,EAAsC;AACrC,SAAK,WAAL,CAAiB,KAAjB;AACA;;AAED,QAAK,gBAAL,GAAwB,SAAxB;AACA,QAAK,YAAL,CAAkB,IAAlB,CAAwB,KAAK,SAAL,CAAe,MAAf,CAAsB,kBAA9C;AACA;;;+BAGY;;;AAGZ,QAAK,gBAAL,GAAwB,MAAxB;AACA,QAAK,YAAL,CAAkB,IAAlB,CAAwB,KAAK,SAAL,CAAe,MAAf,CAAsB,iBAA9C;AAEA;;;;EAjG8B,Y;;AAqGhC,OAAO,OAAP,GAAiB,iBAAjB","file":"stSensors/stSensor_Keyboard.js","sourcesContent":["\"use strict\";\r\n\r\nlet SensorEngine = require('../nodeEngine/SensorEngine.js');\r\n\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\nlet Cylon = require('cylon');\r\n\r\n\r\n/**\r\n * ST Sensor Keyboard\r\n */\r\nclass STSensor_Keyboard extends SensorEngine {\r\n\t\r\n\tconstructor(config) {\r\n\t\tsuper(config);\r\n\t\t\r\n\t\tthis._CylonRobot = null;\r\n\t\tthis._CylonRobotState = \"stop\";\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet stSensor = this;\r\n\t\t\r\n\t\tstSensor._CylonRobot = Cylon.robot({\r\n\t\t\r\n\t\t\t\r\n\t\t  connections: {\r\n\t\t    keyboard: { adaptor: 'keyboard' }\r\n\t\t  },\r\n\r\n\t\t  devices: {\r\n\t\t    keyboard: { driver: 'keyboard' }\r\n\t\t  },\r\n\r\n\t\t  work: function(my) {\r\n\t\t\t  \r\n//\t\t\t  \r\n//\t\t    my.keyboard.on('a', function(key) {\r\n//\t\t      stSensor.eventEmitter.emit(stSensor.CONSTANTS.Events.SensorData, {\"key\":\"a\"});\r\n//\t\t    });\r\n//\t\t    my.keyboard.on('b', function(key) {\r\n//\t\t\t      stSensor.eventEmitter.emit(stSensor.CONSTANTS.Events.SensorData, {\"key\":\"b\"});\r\n//\t\t    });\r\n\t\t    \r\n\t\t\t  \r\n\t\t    \r\n\t\t    my.keyboard.on(\"up\", function() {\r\n\t\t    \tif (stSensor._CylonRobotState != \"working\") {\r\n\t\t\t\t\t  return;\r\n\t\t\t\t  }\r\n\t\t        console.log(\"UP!\");\r\n\t\t        stSensor.eventEmitter.emit(stSensor.CONSTANTS.Events.SensorData, {\"key\":\"up\"});\r\n\t\t      });\r\n\r\n\t\t      my.keyboard.on(\"down\", function() {\r\n\t\t    \t  if (stSensor._CylonRobotState != \"working\") {\r\n\t\t\t\t\t  return;\r\n\t\t\t\t  }\r\n\t\t        console.log(\"DOWN!\");\r\n\t\t        stSensor.eventEmitter.emit(stSensor.CONSTANTS.Events.SensorData, {\"key\":\"down\"});\r\n\t\t      });\r\n\r\n\t\t      my.keyboard.on(\"left\", function() {\r\n\t\t    \t  if (stSensor._CylonRobotState != \"working\") {\r\n\t\t\t\t\t  return;\r\n\t\t\t\t  }\r\n\t\t        console.log(\"LEFT!\");\r\n\t\t        stSensor.eventEmitter.emit(stSensor.CONSTANTS.Events.SensorData, {\"key\":\"left\"});\r\n\t\t      });\r\n\r\n\t\t      my.keyboard.on(\"RIGHT\", function() {\r\n\t\t    \t  if (stSensor._CylonRobotState != \"working\") {\r\n\t\t\t\t\t  return;\r\n\t\t\t\t  }\r\n\t\t        console.log(\"RIGHT!\");\r\n\t\t        stSensor.eventEmitter.emit(stSensor.CONSTANTS.Events.SensorData, {\"key\":\"RIGHT\"});\r\n\t\t      });\r\n\t\t  }\r\n\t\t  \r\n\t\t});\r\n\t\t\r\n\t\tsuper.initialize();\r\n\t\tthis._CylonRobotState = \"ready\";\r\n\r\n\t}\r\n\t\r\n\t\r\n\tstartEngine() {\r\n\t\tif (this._CylonRobotState == \"ready\") {\r\n\t\t\tthis._CylonRobot.start();\r\n\t\t}\r\n\t\t\r\n\t\tthis._CylonRobotState = \"working\";\r\n\t\tthis.eventEmitter.emit( this.CONSTANTS.Events.SensorEngine_Start );\r\n\t}\r\n\t\r\n\t\r\n\tstopEngine() {\r\n//\t\tthis._CylonRobot.halt();\r\n//\t\tCylon.halt();\r\n\t\tthis._CylonRobotState = \"stop\";\r\n\t\tthis.eventEmitter.emit( this.CONSTANTS.Events.SensorEngine_Stop );\r\n\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = STSensor_Keyboard;"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}