{"version":3,"sources":["stSensors/stSensor_Dummy01.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAI,eAAe,QAAQ,+BAAR,CAAnB;;AAEA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;;;;;;IAOM,gB;;;AAEL,2BAAY,MAAZ,EAAoB;AAAA;;AAAA,kGACb,MADa;;AAGnB,QAAK,SAAL,GAAiB,IAAjB;AAHmB;AAInB;;;;;;;;;+BAKY;;AAEZ,OAAI,WAAW,IAAf;AACA,YAAS,MAAT,GAAkB,CAAlB;;;AAGA,YAAS,YAAT,CAAsB,EAAtB,CAAyB,SAAS,SAAT,CAAmB,MAAnB,CAA0B,aAAnD,EAAkE,YAAW;;AAE5E,aAAS,MAAT;AACA,QAAI,SAAS,MAAT,IAAmB,SAAS,MAAT,CAAgB,OAAhB,CAAwB,KAA/C,EAAsD;;AAErD,cAAS,MAAT,GAAkB,CAAlB;;;AAGA,cAAS,YAAT,CAAsB,IAAtB,CAA2B,SAAS,SAAT,CAAmB,MAAnB,CAA0B,UAArD,EAAiE,EAAC,SAAS,SAAS,MAAT,CAAgB,OAAhB,CAAwB,KAAlC,EAAjE;;AAEA,aAAQ,GAAR,CAAY,wCAAZ,E;;AAEA,cAAS,SAAT,GAAqB,IAAI,IAAJ,GAAW,OAAX,EAArB;;AAEA,SAAI,SAAS,MAAT,CAAgB,OAAhB,CAAwB,QAA5B,EAAsC;AACrC,cAAQ,GAAR,CAAY,kBAAkB,SAAS,SAAvC,E;AACA;;AAGD,SAAI,SAAS,MAAT,CAAgB,OAAhB,CAAwB,aAA5B,EAA2C;;AAE1C,UAAI,SAAS,aAAT,IAA0B,SAA9B,EAAyC;AACvC,WAAI,YAAY,SAAS,SAAT,GAAqB,SAAS,aAA9C;AACA,eAAQ,GAAR,CAAY,uBAAuB,SAAnC,E;AACD;;AAED,eAAS,aAAT,GAAyB,SAAS,SAAlC;AACA;AAED;AAED,IA/BD;;AAkCA;AACA;;;gCAGa;;AAEb,OAAI,WAAW,IAAf;;AAEA,YAAS,QAAT;;;AAGA,YAAS,YAAT,CAAsB,IAAtB,CAA4B,SAAS,SAAT,CAAmB,MAAnB,CAA0B,kBAAtD;AACA;;;+BAGY;;AAEZ,OAAI,WAAW,IAAf;;AAEA,YAAS,YAAT;;;;AAIA,YAAS,YAAT,CAAsB,IAAtB,CAA4B,SAAS,SAAT,CAAmB,MAAnB,CAA0B,iBAAtD;AAEA;;;;;;;;+BAMY;;AAEZ,OAAI,WAAW,IAAf;AACA,OAAI,aAAa,SAAS,MAAT,CAAgB,OAAjC;;AAEA,OAAI,UAAU;AACZ,aAAU,WAAW,KADT;AAEZ,gBAAa,WAAW,QAFZ;AAGZ,qBAAkB,WAAW;AAHjB,IAAd;;AAMA,UAAO,OAAP;AACA;;;;;;;;6BAKU,O,EAAS;;AAEnB,OAAI,WAAW,IAAf;;AAEA,OAAI,SAAS,KAAT,IAAkB,SAAS,SAAT,CAAmB,MAAnB,CAA0B,eAAhD,EAAiE;AAChE,UAAM,mBAAN;AACA;;AAED,OAAI,aAAa,SAAS,MAAT,CAAgB,OAAjC;;AAEA,OAAI,QAAQ,KAAZ,EAAmB;AAClB,eAAW,KAAX,GAAmB,QAAQ,KAA3B;AACA;;AAED,OAAI,QAAQ,QAAR,IAAoB,SAAxB,EAAmC;AAClC,eAAW,QAAX,GAAsB,QAAQ,QAA9B;AACA;;AAED,OAAI,QAAQ,aAAR,IAAyB,SAA7B,EAAwC;AACvC,eAAW,aAAX,GAA2B,QAAQ,aAAnC;AACA;AACD;;;;EAxH6B,Y;;AA8H/B,OAAO,OAAP,GAAiB,gBAAjB","file":"stSensors/stSensor_Dummy01.js","sourcesContent":["\"use strict\";\r\n\r\nlet SensorEngine = require('../nodeEngine/SensorEngine.js');\r\n\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n\r\n\r\n/**\r\n * ST Sensor Dummy01\r\n */\r\nclass STSensor_Dummy01 extends SensorEngine {\r\n\t\r\n\tconstructor(config) {\r\n\t\tsuper(config);\r\n\t\t\r\n\t\tthis._lastTime = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet stSensor = this;\r\n\t\tstSensor._ticks = 0;\r\n\t\t\r\n\t\t// Map event MainLoop_Tick\r\n\t\tstSensor.eventEmitter.on(stSensor.CONSTANTS.Events.MainLoop_Tick, function() {\n\t\t\t\r\n\t\t\tstSensor._ticks++;\r\n\t\t\tif (stSensor._ticks >= stSensor.config.options.ticks) {\r\n\t\t\t\t\r\n\t\t\t\tstSensor._ticks = 0;\r\n\t\t\t\t\r\n\t\t\t\t// Emit event SensorData\r\n\t\t\t\tstSensor.eventEmitter.emit(stSensor.CONSTANTS.Events.SensorData, {\"ticks\": stSensor.config.options.ticks});\r\n\t\t\t\t\r\n\t\t\t\tconsole.log('<*> STSensor_Dummy01.Events.SensorData');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\t\tstSensor._lastTime = new Date().getTime();\r\n\r\n\t\t\t\tif (stSensor.config.options.showTime) {\r\n\t\t\t\t\tconsole.log(' <···> Time: ' + stSensor._lastTime);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\t}\r\n\t\t\t  \r\n\t\t\t\t\r\n\t\t\t\tif (stSensor.config.options.showDeltaTime) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (stSensor._deltaTimeRef != undefined) {\r\n\t\t\t\t\t \tlet deltaTime = stSensor._lastTime - stSensor._deltaTimeRef;\r\n\t\t\t\t\t \tconsole.log(' <···> DetalTime: ' + deltaTime );\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tstSensor._deltaTimeRef = stSensor._lastTime;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tsuper.initialize();\r\n\t}\r\n\t\r\n\t\r\n\tstartEngine() {\r\n\t\t\r\n\t\tlet stSensor = this;\r\n\t\t\r\n\t\tstSensor.mainLoop();\r\n\t\t\r\n\t\t// Emit event SensorEngine_Start\r\n\t\tstSensor.eventEmitter.emit( stSensor.CONSTANTS.Events.SensorEngine_Start );\r\n\t}\r\n\t\r\n\t\r\n\tstopEngine() {\r\n\t\t\r\n\t\tlet stSensor = this;\r\n\t\t\r\n\t\tstSensor.stopMainLoop();\r\n\t\t\r\n\t\t// Emit event SensorEngine_Stop \r\n\t\t// for MainLoop_Stop\r\n\t\tstSensor.eventEmitter.emit( stSensor.CONSTANTS.Events.SensorEngine_Stop );\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get options\r\n\t */\r\n\tgetOptions() {\r\n\t\t\r\n\t\tlet stSensor = this;\r\n\t\tlet snsOptions = stSensor.config.options;\r\n\t\t\r\n\t\tlet options = {\r\n\t\t\t\t\"ticks\" : snsOptions.ticks,\r\n\t\t\t\t\"showTime\" : snsOptions.showTime,\r\n\t\t\t\t\"showDeltaTime\" : snsOptions.showDeltaTime\r\n\t\t};\r\n\t\t\r\n\t\treturn options;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set options\r\n\t */\r\n\tsetOptions(options) {\r\n\t\t\r\n\t\tlet stSensor = this;\r\n\t\t\r\n\t\tif (stSensor.state == stSensor.CONSTANTS.States.SEstate_Working) {\r\n\t\t\tthrow \"Bad sensor state.\";\r\n\t\t}\r\n\t\t\r\n\t\tlet actOptions = stSensor.config.options;\r\n\t\t\r\n\t\tif (options.ticks) {\r\n\t\t\tactOptions.ticks = options.ticks;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.showTime != undefined) {\r\n\t\t\tactOptions.showTime = options.showTime;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.showDeltaTime != undefined) {\r\n\t\t\tactOptions.showDeltaTime = options.showDeltaTime;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nmodule.exports = STSensor_Dummy01;"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}