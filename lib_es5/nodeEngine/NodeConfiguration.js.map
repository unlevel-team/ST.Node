{"version":3,"sources":["nodeEngine/NodeConfiguration.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAQA,IAAM,8BAA8B;AACnC,gBAAe;AADoB,CAApC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+EM,iB;;;;;;;AAML,+BAAc;AAAA;;AACb,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,SAAL,GAAiB,2BAAjB;AACA;;;;;;;;;;;;;6BAUQ,O,EAAS;;AAEjB,UAAI,YAAY,SAAhB,EAA2B;AAC1B,kBAAU,EAAV;AACA;;AAED,UAAI,cAAc,4BAA4B,UAA9C;AACA,UAAI,QAAQ,UAAR,KAAuB,SAA3B,EAAsC;AACrC,sBAAc,QAAQ,UAAtB;AACA;;AAGD,UAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,UAAI;AACH,YAAI,MAAM,KAAK,KAAL,CAAW,GAAG,YAAH,CAAgB,WAAhB,EAA6B,MAA7B,CAAX,CAAV;AACA,aAAK,MAAL,GAAc,GAAd;AACA,OAHD,CAGE,OAAO,CAAP,EAAU;;AAEX,gBAAQ,GAAR,CAAY,kCAAZ,E;AACA,gBAAQ,GAAR,CAAY,EAAE,OAAd,E;AAEA;;AAED,cAAQ,GAAR,CAAY,+BAAZ,E;AAEG;;;;;;AAGL,OAAO,OAAP,GAAiB,iBAAjB","file":"nodeEngine/NodeConfiguration.js","sourcesContent":["\"use strict\";\r\n\r\n//const fs = require('fs');\r\n\r\n/**\r\n * Node configuration constants\r\n * @memberof st.nodeEngine\r\n */\r\nconst NodeConfiguration_CONSTANTS = {\r\n\t\"configFile\" : \"conf/nodeconfig.json\"\r\n};\r\n\r\n\r\n\r\n/**\r\n * The Sensor configuration JSON.\r\n * \r\n * @typedef {Object} SensorConfig_JSON\r\n * @memberof st.nodeEngine.NodeConfiguration\r\n * @type Object\r\n * \r\n * @property {string} id - Sensor ID\r\n * @property {string} type - Sensor type\r\n * @property {boolean} enabled - Enabled flag\r\n * @property {number} loopTime - loopTime\r\n * \r\n * @property {object} options - Sensor options\r\n * @property {string} [options.sensorEngineURL] - Sensor engine URL\r\n * \r\n * \r\n */\r\n\r\n\r\n/**\r\n * The Actuator configuration JSON.\r\n * \r\n * @typedef {Object} ActuatorConfig_JSON\r\n * @memberof st.nodeEngine.NodeConfiguration\r\n * @type Object\r\n * \r\n * @property {string} id - Sensor ID\r\n * @property {string} type - Sensor type\r\n * @property {boolean} enabled - Enabled flag\r\n * @property {number} loopTime - loopTime\r\n * \r\n * @property {object} options - Sensor options\r\n * @property {string} [options.actuatorEngineURL] - Sensor engine URL\r\n * \r\n * \r\n */\r\n\r\n\r\n/**\r\n * The NodeConfiguration JSON file.\r\n * \r\n * @typedef {Object} NodeConfig_JSON\r\n * @memberof st.nodeEngine.NodeConfiguration\r\n * @type Object\r\n * \r\n * @property {string} type='Config' - Type on JSON\r\n * @property {string} typeExtra='Node' - Type extra on JSON\r\n * \r\n * @property {object} node - Node configuration\r\n * @property {string} node.nodeID - Node ID\r\n * @property {string} node.type='STNode' - type of node\r\n * \r\n * @property {object} server - Server configuration\r\n * @property {string} server.netLocation - Net location\r\n * @property {number} server.controlPort - Control port\r\n * \r\n * \r\n * @property {st.nodeEngine.NodeConfiguration.SensorConfig_JSON[]} sensors - Sensors configuration\r\n * @property {st.nodeEngine.NodeConfiguration.ActuatorConfig_JSON[]} actuators - Actuators configuration\r\n * \r\n * \r\n */\r\n\r\n\r\n/**\r\n * NodeConfiguration\r\n * \r\n * @class\r\n * @memberof st.nodeEngine\r\n * \r\n * @property {object} config - Configuration object\r\n * \r\n */\r\nclass NodeConfiguration {\r\n\t\r\n\t/**\r\n\t * \r\n\t * @constructs NodeConfiguration\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.config = null;\r\n\t\tthis.CONSTANTS = NodeConfiguration_CONSTANTS;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Read configuration from file\r\n\t * \r\n\t * @param {object} options - Options object\r\n\t * @param {string} [options.configFile] - configuration file path\r\n\t * \r\n\t */\r\n\treadFile(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _configFile = NodeConfiguration_CONSTANTS.configFile;\r\n\t\tif (options.configFile !== undefined) {\r\n\t\t\t_configFile = options.configFile;\r\n\t\t}\r\n\r\n\t\t\r\n\t\tvar fs = require('fs');\r\n\t\t\r\n\t\ttry {\r\n\t\t\tvar obj = JSON.parse(fs.readFileSync(_configFile, 'utf8'));\r\n\t\t\tthis.config = obj;\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('NodeConfiguration.readFile Error');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e.message);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log('NodeConfiguration.readFile OK');\t// TODO REMOVE DEBUG LOG\r\n\r\n    }\r\n}\r\n\r\nmodule.exports = NodeConfiguration;\r\n\r\n\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}