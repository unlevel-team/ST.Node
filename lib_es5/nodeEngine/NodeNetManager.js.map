{"version":3,"sources":["nodeEngine/NodeNetManager.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAcA,IAAI,sBAAsB,QAAQ,6BAAR,EAAuC,mBAAjE;;;;;;IAQM,c;;;AAGL,yBAAY,MAAZ,EAAoB;AAAA;;AAAA;;AAEnB,QAAK,MAAL,GAAc,MAAd;;AAFmB;AAInB;;;;;;;;;uCAMoB,K,EAAO,M,EAAQ;;AAEnC,OAAI,QAAQ,IAAZ;AACA,OAAI,OAAO,MAAM,MAAN,CAAa,KAAxB;AACA,OAAI,aAAa,KAAK,iBAAL,CAAuB,MAAxC;;AAEA,OAAI,aAAa;AAChB,QAAI,KADY;AAEhB,UAAM,MAAM,SAAN,CAAgB,MAAhB,CAAuB,eAFb;AAGhB,aAAS,WAAW,IAAX,CAAgB,MAHT;AAIhB,WAAO,IAJS;AAKhB,YAAQ,WAAW,IAAX,CAAgB,MAAhB,GAAyB,GAAzB,GAA+B,KALvB;AAMhB,eAAW,MAAM,SAAN,CAAgB,MAAhB,CAAuB;AANlB,IAAjB;;;;AAYA,OAAI,UAAU,SAAV,IACF,UAAU,IADZ,EACkB;;AAEjB,QAAI,OAAO,IAAX,EAAiB;AAChB,gBAAW,IAAX,GAAkB,OAAO,IAAzB;AACA;;AAED,QAAI,OAAO,UAAX,EAAuB;AACtB,gBAAW,UAAX,GAAwB,OAAO,UAA/B;AACA;;AAED,QAAI,OAAO,WAAX,EAAwB;AACvB,gBAAW,WAAX,GAAyB,OAAO,WAAhC;AACA;AAED;;;AAID,OAAI,MAAM,oBAAoB,eAApB,CAAoC,UAApC,CAAV;;AAEA,SAAM,cAAN,CAAqB,GAArB;AACA;;;;;;;;+BAMY,G,EAAK,O,EAAS;;AAE1B,OAAI,QAAQ,IAAZ;;AAEA,OAAI,IAAI,MAAJ,CAAW,KAAX,IAAoB,IAAI,SAAJ,CAAc,MAAd,CAAqB,eAA7C,EAA8D;AAC7D,UAAM,wBAAN;AACA;;AAED,OAAI,QAAQ,QAAZ,EAAsB;AACrB,QAAI,MAAJ,CAAW,QAAX,GAAsB,QAAQ,QAA9B;AACA;;AAED,OAAI,QAAQ,WAAZ,EAAyB;AACxB,QAAI,MAAJ,CAAW,WAAX,GAAyB,QAAQ,WAAjC;AACA;;AAED,OAAI,QAAQ,UAAZ,EAAwB;AACvB,QAAI,MAAJ,CAAW,UAAX,GAAwB,QAAQ,UAAhC;AACA;AAGD;;;;EAhF2B,mB;;AAqF7B,OAAO,OAAP,GAAiB,cAAjB","file":"nodeEngine/NodeNetManager.js","sourcesContent":["\"use strict\";\r\n\r\n/*\r\n Node Net manager\r\n \r\n - Provides net management for node.\r\n - Add data channel to node\r\n - Remove data channel from node\r\n - Get data channels of node\r\n \r\n \r\n */\r\n\r\n\r\nlet DataChannelsManager = require('../stNetwork/DataChannel.js').DataChannelsManager;\r\n\r\n\r\n\r\n\r\n/**\r\n * Node net manager\r\n */\r\nclass NodeNetManager extends DataChannelsManager {\r\n\t\r\n\t\r\n\tconstructor(config) {\r\n\t\tsuper();\r\n\t\tthis.config = config;\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add data channel to node\r\n\t */\r\n\taddDataChannelToNode(dchID, config) {\r\n\t\t\r\n\t\tlet nnetm = this;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeConfig = node.nodeConfiguration.config;\r\n\t\t\r\n\t\tvar dch_Config = {\r\n\t\t\tid: dchID,\r\n\t\t\ttype: nnetm.CONSTANTS.Config.DCtype_socketio,\r\n\t\t\t_nodeID: nodeConfig.node.nodeID,\r\n\t\t\t_node: node,\r\n\t\t\t_dchID: nodeConfig.node.nodeID + '.' + dchID,\r\n\t\t\t_netState: nnetm.CONSTANTS.States.DCstate_Config\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t// · · · ^^^ · · ·  ^^^ · · ·  ^^^ · · · ^^^ · · ·  ^^^ · |\\/|··· \r\n\t\t// Extra config parameters\r\n\t\tif (config != undefined && \r\n\t\t\t\tconfig != null) {\r\n\t\t\t\r\n\t\t\tif (config.mode) {\r\n\t\t\t\tdch_Config.mode = config.mode;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (config.socketPort) {\r\n\t\t\t\tdch_Config.socketPort = config.socketPort;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (config.netLocation) {\r\n\t\t\t\tdch_Config.netLocation = config.netLocation;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t// · · · ^^^ · · ·  ^^^ · · ·  ^^^ · · · ^^^ · · ·  ^^^ · |/\\|··· \r\n\r\n\t\t\r\n\t\tvar dch = DataChannelsManager.get_DataChannel(dch_Config);\r\n\t\t\r\n\t\tnnetm.addDataChannel(dch);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set data channel options\r\n\t */\r\n\tsetDCOptions(dch, options) {\r\n\t\t\r\n\t\tlet nnetm = this;\r\n\t\t\r\n\t\tif (dch.config.state == dch.CONSTANTS.States.DCstate_Working) {\r\n\t\t\tthrow \"Bad data channel state\";\r\n\t\t}\r\n\t\t\r\n\t\tif (options.loopTime) {\r\n\t\t\tdch.config.loopTime = options.loopTime;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.netLocation) {\r\n\t\t\tdch.config.netLocation = options.netLocation;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.socketPort) {\r\n\t\t\tdch.config.socketPort = options.socketPort;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\nmodule.exports = NodeNetManager;\r\n\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}