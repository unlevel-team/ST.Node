{"version":3,"sources":["nodeEngine/ActuatorsManager.js"],"names":[],"mappings":"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","file":"nodeEngine/ActuatorsManager.js","sourcesContent":["\"use strict\";\r\n\r\n\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n\r\nlet ActuatorEngine = require('./ActuatorEngine.js');\r\n\r\n\r\n/**\r\n * ActuatorsManager CONSTANTS\r\n */\r\nconst ActuatorsManager_CONSTANTS = {\r\n\t\t\"Config\" : {\r\n\t\t\t\"type_Vactuator\" : \"vactuator\",\r\n\t\t\t\"type_Cylonjs\" : \"cylonjs\"\r\n\r\n\t\t},\r\n\t\t\"Events\" : {\r\n\t\t\t\"ActuatorOptionsUpdated\" : \"Actuator Options Updated\",\r\n\t\t},\r\n\t\t\r\n\t\t\"Messages\" : {\r\n\t\t\t\"getActuatorsList\" : \"Get Actuators List\",\r\n\t\t\t\"ActuatorsList\" : \"Actuators List\",\r\n\t\t\t\"getActuatorInfo\" : \"Get Actuator Info\",\r\n\t\t\t\"ActuatorInfo\" : \"Actuator Info\",\r\n\t\t\t\"getActuatorOptions\" : \"Get Actuator Options\",\r\n\t\t\t\"setActuatorOptions\" : \"Set Actuator Options\",\r\n\t\t\t\"ActuatorOptions\" : \"Actuator Options\",\r\n\t\t\t\"ActuatorOptionsUpdated\" : \"Actuator Options Updated\",\r\n\r\n\t\t\t\r\n\t\t\t\"StartActuator\" : \"StartActuator\",\r\n\t\t\t\"ActuatorStarted\" : \"ActuatorStarted\",\r\n\t\t\t\"StopActuator\" : \"StopActuator\",\r\n\t\t\t\"ActuatorStopped\" : \"ActuatorStopped\",\r\n\t\t\t\r\n\t\t\t\"TurnOffActuators\" : \"TurnOffActuators\"\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n/**\r\n * Actuator\r\n */\r\nclass Actuator {\r\n\t\r\n\tconstructor(config) {\r\n\t\tthis.config = config;\r\n\t\tthis.eventEmitter = new EventEmitter();\r\n\t\tthis.actuatorEngine = null;\r\n\r\n\t}\r\n\t\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\t// ··· - ··· - ··· - ··· - ··· - ··· - ··· - ··· _ ··· - ··· - ··· - ··· _ ··· - ··· - ··· \\/ ···\r\n\t\t// Actuator Engine URL \r\n\t\tif (this.config.options.actuatorEngineURL != undefined && \r\n\t\t\t\tthis.config.options.actuatorEngineURL != null) {\r\n\t\t\t\r\n\t\t\tlet actuator = this;\r\n\t\t\t\r\n\t\t\tactuator._actuatorEngine = null;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tactuator._actuatorEngine = require(actuator.config.options.actuatorEngineURL);\r\n\t\t\t\tactuator.actuatorEngine = new actuator._actuatorEngine(actuator.config);\r\n\t\t\t\tactuator.actuatorEngine.initialize();\r\n\t\t\t\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\t  console.log('<EEE> Actuator.initialize');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\t  console.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t}\r\n\t\t} \r\n\t\t// ··· - ··· - ··· - ··· - ··· - ··· - ··· - ··· _ ··· - ··· - ··· - ··· _ ··· - ··· - ··· /\\ ···\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * VActuator\r\n */\r\nclass VActuator extends Actuator {\r\n\t\r\n\tconstructor(config) {\r\n\t\tsuper(config);\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * CylActuator\r\n */\r\nclass CylActuator extends Actuator {\r\n\t\r\n\tconstructor(config) {\r\n\t\tsuper(config);\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * Actuators manager\r\n */\r\nclass ActuatorsManager {\r\n\t\r\n\tconstructor() {\r\n\t\t\r\n\t\tthis.actuatorsList = [];\r\n\t\tthis.eventEmitter = new EventEmitter();\r\n\t\t\r\n\t\tthis.CONSTANTS = ActuatorsManager_CONSTANTS;\r\n\r\n\t\t\r\n\t\tthis.nodeCtrlSrv = null;\r\n\t\t\r\n\t\tthis._Cylon = null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set NodeControlService\r\n\t */\r\n\tsetNodeControlService(nodeCtrlSrv) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tamng.nodeCtrlSrv = nodeCtrlSrv;\r\n\t\tlet socket = nodeCtrlSrv.socket;\r\n\t\t\r\n\t\t\r\n\t\t// Map event ActuatorOptionsUpdated\r\n\t\tamng.eventEmitter.on(amng.CONSTANTS.Events.ActuatorOptionsUpdated, function(data){\r\n\t\t\t\r\n\t\t\tconsole.log('<*> ActuatorsManager.Events.ActuatorOptionsUpdated');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\tlet actuator = data.actuator;\r\n\t\t\t\r\n\t\t\tsocket.emit(amng.CONSTANTS.Messages.ActuatorOptionsUpdated, {\r\n\t\t\t\t\"actuatorID\": actuator.config.id\r\n\t\t\t});\t// Emit message ActuatorOptions\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t  // Map Message getActuatorsList\r\n\t\t\tamng.nodeCtrlSrv.socket.on( amng.CONSTANTS.Messages.getActuatorsList, function(msg){\r\n\t\t\t\tamng._msg_getActuatorsList(msg);\r\n\t\t  });\r\n\t\t\t\r\n\t\t\t\r\n\t\t  // Message getActuatorOptions\r\n\t\t\tamng.nodeCtrlSrv.socket.on( amng.CONSTANTS.Messages.getActuatorOptions, function(msg){\r\n\t\t\t\tamng._msg_getActuatorOptions(msg);\r\n\t\t  });\r\n\t\t\t\t\r\n\t\t\r\n\t\t  // Message setActuatorOptions\r\n\t\t\tamng.nodeCtrlSrv.socket.on( amng.CONSTANTS.Messages.setActuatorOptions, function(msg){\r\n\t\t\t\tamng._msg_setActuatorOptions(msg);\r\n\t\t  });\r\n\t\t\r\n\t\t  // Message StartActuator\r\n\t\t\tamng.nodeCtrlSrv.socket.on( amng.CONSTANTS.Messages.StartActuator, function(msg){\r\n\t\t\t\tamng._msg_StartActuator(msg);\r\n\t\t  });\r\n\t\t\t\r\n\t\t\t\r\n\t\t// Message StopActuator\r\n\t\tamng.nodeCtrlSrv.socket.on( amng.CONSTANTS.Messages.StopActuator, function(msg){\r\n\t\t\tamng._msg_StopActuator(msg);\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\t// Message TurnOffActuators\r\n\t\tamng.nodeCtrlSrv.socket.on( amng.CONSTANTS.Messages.TurnOffActuators, function(msg){\r\n\t\t\tamng._msg_TurnOffActuators(msg);\r\n\t\t  });\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add Actuator\r\n\t */\r\n\taddActuator(config) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet stActuator = null;\r\n\t\t\r\n\t\tswitch ( config.type ) {\r\n\t\t\tcase amng.CONSTANTS.Config.type_Vactuator:\r\n\t\t\t\tstActuator = new VActuator(config);\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase amng.CONSTANTS.Config.type_Cylonjs:\r\n\t\t\t\tstActuator = new CylActuator(config);\r\n\t\t\t\tif (amng._Cylon == null) {\r\n\t\t\t\t\tamng._Cylon = require('cylon');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tdefault:\r\n\t\t\t\tstActuator = new Actuator(config);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tstActuator.initialize();\r\n\t\tamng.actuatorsList.push( stActuator );\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns Actuator searched by ID\r\n\t */\r\n\tgetActuatorByID(actuatorID) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet actuator = null;\r\n\t\tlet _i = 0;\r\n\t\t\r\n\t\tfor (_i = 0; _i < amng.actuatorsList.length; _i++) {\r\n\t\t\tif (amng.actuatorsList[_i].config.id == actuatorID) {\r\n\t\t\t\tactuator = amng.actuatorsList[_i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\t\"STactuator\": actuator,\r\n\t\t\t\"position\": _i\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns new ActuatorEngine\r\n\t */\r\n\tstatic getActuatorEngine(config) {\r\n\t\tlet actuatorEngine = new ActuatorEngine(config);\r\n\t\treturn actuatorEngine;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Turn off actuators\r\n\t */\r\n\tturnOffActuators() {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet actList = amng.actuatorsList;\r\n\t\t\r\n\t\tactList.forEach(function(act_, _i) {\n\t\t\tif ( act_.actuatorEngine != null ) {\r\n\t\t\t\tact_.actuatorEngine.stopEngine();\r\n\t\t\t}\n\t\t});\r\n\t\t\r\n\t\tif (amng._Cylon != null ) {\r\n\t\t\tamng._Cylon.halt();\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log('<*> ActuatorsManager.turnOffActuators');\t// TODO REMOVE DEBUG LOG\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get actuator options\r\n\t */\r\n\tgetActuatorOptions(act){\r\n\t\t\r\n\t\tlet actOptions = {\r\n\t\t\t\t\"loopTime\" : act.config.loopTime,\r\n\t\t\t\t\"actuatorEngineURL\": act.config.options.actuatorEngineURL\r\n\t\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tif ( act.actuatorEngine != null ) {\r\n\t\t\tactOptions.engineOptions = act.actuatorEngine.getOptions();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\treturn actOptions;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set actuator options\r\n\t */\r\n\tsetActuatorOptions(act, options){\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\t\r\n\t\tif (act.actuatorEngine && \r\n\t\t\t\tact.actuatorEngine.state == act.actuatorEngine.CONSTANTS.States.State_Working) {\r\n\t\t\tthrow \"Bad actuator state.\";\r\n\t\t}\r\n\t\t\r\n\t\tif (options.loopTime) {\r\n\t\t\tact.config.loopTime = options.loopTime;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.engineOptions) {\r\n\t\t\tact.actuatorEngine.setOptions(options.engineOptions);\r\n\t\t}\r\n\t\t\r\n\t\tamng.eventEmitter.emit(amng.CONSTANTS.Events.ActuatorOptionsUpdated, {\"actuator\": act});\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getActuatorsList\r\n\t */\r\n\t_msg_getActuatorsList(msg) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet socket = amng.nodeCtrlSrv.socket;\r\n\t\t\r\n\t\t  \r\n\t\tconsole.log('<*> ActuatorsManager.Messages.getActuatorsList');\t// TODO REMOVE DEBUG LOG\r\n\t  \r\n\t\t  let response = {};\r\n\t\t  response.numActuators = amng.actuatorsList.length;\r\n\t\t  response.actuators = [];\r\n\t\t  \r\n\t\t  amng.actuatorsList.forEach(function(act_, _i) {\r\n\t\t  \t\r\n\t\t\t  let actuator = {\r\n\t\t\t\t\t\t\"actuatorID\" : act_.config.id,\r\n\t\t\t\t\t\t\"type\" : act_.config.type\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t  response.actuators.push( actuator );\r\n\t\t\t  \r\n\t\t  });\r\n\t  \r\n\t\t  socket.emit( amng.CONSTANTS.Messages.ActuatorsList, response );\t// Emit message ActuatorsList\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getActuatorOptions\r\n\t */\r\n\t_msg_getActuatorOptions(msg) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet socket = amng.nodeCtrlSrv.socket;\r\n\t\t\r\n\t\t\r\n\t\tlet actuatorID = msg.actuatorID;\r\n\t  \r\n\t\tlet response = {\r\n\t\t\t\t\"actuatorID\" : actuatorID\r\n\t\t};\r\n\t\t  \r\n\t\tconsole.log('<*> ActuatorsManager.Messages.getActuatorOptions');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t  \r\n\t\t  try {\r\n\t\t\t  \r\n\t\t\t  let actuatorSearch = amng.getActuatorByID(actuatorID);\r\n\t\t\t  if(actuatorSearch.STactuator == null){\r\n\t\t\t\t  throw \"Actuator not found.\";\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  let actuator = actuatorSearch.STactuator;\r\n\t\t\t  \r\n\t\t\t  response.options = amng.getActuatorOptions(actuator);\r\n\t\t\t  \r\n\t\t\t  socket.emit(amng.CONSTANTS.Messages.ActuatorOptions, response);\t// Emit message ActuatorOptions\r\n\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\tresponse.result = \"ERROR\";\r\n\t\t\t\tresponse.error = e;\r\n\t\r\n\t\t\t\tconsole.log('<EEE> ActuatorsManager.Messages.getActuatorOptions ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tconsole.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message setActuatorOptions\r\n\t */\r\n\t_msg_setActuatorOptions(msg) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet socket = amng.nodeCtrlSrv.socket;\r\n\t\t\r\n\t\t\r\n\t\t  let actuatorID = msg.actuatorID;\r\n\t\t  let options = msg.options;\r\n\t\t  \r\n\t\t  let response = {\r\n\t\t\t\t  \"actuatorID\" : actuatorID\r\n\t\t  };\r\n\t\t  \r\n\t\t\tconsole.log('<*> ActuatorsManager.Messages.setActuatorOptions');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t  \r\n\t\t  try {\r\n\t\t\t  \r\n\t\t\t  let actuatorSearch = amng.getActuatorByID(actuatorID);\r\n\t\t\t  if(actuatorSearch.STactuator == null){\r\n\t\t\t\t  throw \"Actuator not found.\";\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  let actuator = actuatorSearch.STactuator;\r\n\t\t\t  \r\n\t\t\t  amng.setActuatorOptions(actuator, options);\r\n\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\tresponse.result = \"ERROR\";\r\n\t\t\t\tresponse.error = e;\r\n\t\r\n\t\t\t\tconsole.log('<EEE> ActuatorsManager.Messages.setActuatorOptions ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tconsole.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message StartActuator\r\n\t */\r\n\t_msg_StartActuator(msg) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\t\r\n\t  console.log('<*> ActuatorsManager.Messages.StartActuator');\t// TODO REMOVE DEBUG LOG\r\n\t  console.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t  let response = {};\r\n\t  response.result = null;\r\n\t\t  \r\n\t  try {\r\n\t\t\r\n\t\t  let _actuatorSearch = amng.getActuatorByID(msg.actuatorID);\r\n\t\t  \r\n\t\t  if (_actuatorSearch.STactuator != null) {\r\n\t\t\t  _actuatorSearch.STactuator.actuatorEngine.startEngine();\r\n\t\t\t  response.result = \"OK\";\r\n\t\t  } else {\r\n\t\t\t  \r\n\t\t\t  console.log(\"Not found!!!\");\t// TODO REMOVE DEBUG LOG\r\n\t\t\tthrow \"Actuator not found.\";  \r\n\t\t  }\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = e;\r\n\t\t\t\r\n\t\t  console.log('<EEE> ActuatorsManager.Messages.StartActuator ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t  console.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message StopActuator\r\n\t */\r\n\t_msg_StopActuator(msg) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\t\r\n\t  console.log('<*> ActuatorsManager.Messages.StopActuator');\t// TODO REMOVE DEBUG LOG\r\n\t  console.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t  let response = {};\r\n\t  response.result = null;\r\n\t  \r\n\t  try {\r\n\t\t\r\n\t\t  let _actuatorSearch = amng.getActuatorByID(msg.actuatorID);\r\n\t\t  \r\n\t\t  if (_actuatorSearch.STactuator != null) {\r\n\t\t\t  _actuatorSearch.STactuator.actuatorEngine.stopEngine();\r\n\t\t\t  response.result = \"OK\";\r\n\t\t  } else {\r\n\t\t\t  \r\n\t\t\t  console.log(\"Not found!!!\");\t// TODO REMOVE DEBUG LOG\r\n\t\t\tthrow \"Actuator not found.\";  \r\n\t\t  }\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = e;\r\n\t\t\t\r\n\t\t  console.log('<EEE> ActuatorsManager.Messages.StopActuator ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t  console.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message TurnOffActuators\r\n\t */\r\n\t_msg_TurnOffActuators(msg) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\t\r\n\t\t  console.log('<*> ActuatorsManager.Messages.TurnOffActuators');\t// TODO REMOVE DEBUG LOG\r\n\t\t  console.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t  let response = {};\r\n\t\t  response.result = null;\r\n\t\t  \r\n\t\t  try {\r\n\t\t\t\r\n\t\t\t  amng.turnOffActuators();\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\tresponse.result = \"ERROR\";\r\n\t\t\t\tresponse.error = e;\r\n\t\t\t\t\r\n\t\t\t  console.log('<EEE> ActuatorsManager.Messages.TurnOffActuators ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t  console.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t};\r\n\t\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\nlet ActuatorsManager_Lib = {\r\n\t\t\"ActuatorsManager\" : ActuatorsManager,\r\n\t\t\"ActuatorEngine\" : ActuatorEngine,\r\n\t\t\"CONSTANTS\" : ActuatorsManager_CONSTANTS\r\n\t\t\r\n\t}\r\n\r\nmodule.exports = ActuatorsManager_Lib;"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}