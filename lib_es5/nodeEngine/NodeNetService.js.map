{"version":3,"sources":["nodeEngine/NodeNetService.js"],"names":[],"mappings":"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","file":"nodeEngine/NodeNetService.js","sourcesContent":["\"use strict\";\r\n\r\n\r\n/*\r\n Node Net service\r\n\r\n - Provides net service for node.\r\n - Add node to Net service\r\n - Remove data channel from node\r\n - Get data channels of node\r\n\r\n\r\n*/\r\n\r\n\r\n/**\r\n * Node net service constants\r\n */\r\nconst NodeNetService_CONSTANTS = {\r\n\t\t\r\n\t\"Messages\" : {\r\n\t\t\"getNetInfo\" : \"Get Net Info\",\r\n\t\t\"NetInfo\" : \"Net Info\",\r\n\t\t\r\n\t\t\r\n\t\t\"createDataChannel\" : \"Create DC\",\r\n\t\t\"DataChannelCreated\" : \"DC Created\",\r\n\t\t\"deleteDataChannel\" : \"Delete DC\",\r\n\t\t\"DataChannelDeleted\" : \"DC Deleted\",\r\n\t\t\r\n\t\t\"getDataChannelOptions\" : \"get DC Options\",\r\n\t\t\"DataChannelOptions\" : \"DC Options\",\r\n\t\t\"SetDCOptions\" : \"Set DC Options\",\r\n\t\t\"DCOptionsUpdated\" : \"DC Options Updated\"\r\n\t\t\r\n\r\n\t}\r\n\t\r\n};\r\n\r\n\r\n/**\r\n * Node net service\r\n */\r\nclass NodeNetService {\r\n\t\r\n\tconstructor(node, nodeNetManager) {\r\n\t\t\r\n\t\tthis.node = node;\r\n\t\tthis.nodeNetManager = nodeNetManager;\r\n\t\t\r\n\t\tthis.CONSTANTS = NodeNetService_CONSTANTS;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\tthis._mapControlEvents();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control events\r\n\t */\r\n\t_mapControlEvents() {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\t// Map event ConnectedToServer\r\n\t\tnodeCtrlSrv.eventEmitter.on(nodeCtrlSrv.CONSTANTS.Events.ConnectedToServer, function() {\r\n\t\t\tif (!nnets._mapControlMessages_OK) {\r\n\t\t\t\tnnets._mapControlMessages(node, node.socket);\r\n\t\t\t}\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t// Map event DataChannelAdded\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.DataChannelAdded, function(channelID) {\r\n\t\t\t\r\n\t\t\tlet channelSearch = nnetm.getDataChannelByID(channelID);\r\n\t\t\tlet dch = channelSearch.dataChannel;\r\n\t\t\t\r\n\t\t\tvar message = {\r\n\t\t\t\t\"channelID\" : dch.config.id,\r\n\t\t\t\t\"_chnID\" : dch.config._dchID,\r\n\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\"socketPort\" : dch.config.socketPort,\r\n\t\t\t\t\"netLocation\" : dch.config.netLocation\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DataChannelCreated, message);\t// Emit message DataChannelCreated \r\n\t\t\t\r\n\t\t\tconsole.log('<*> ST NodeNetService.DataChannelCreated');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t// Map event DataChannelRemoved\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.DataChannelRemoved, function(channelID) {\r\n\t\t\t\r\n\t\t\tvar message = {\r\n\t\t\t\t\"channelID\" : channelID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DataChannelDeleted, message);\t// Emit message DataChannelDeleted \r\n\t\t\t\r\n\t\t\tconsole.log('<*> ST NodeNetService.DataChannelDeleted');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control messages\r\n\t */\r\n\t_mapControlMessages(node, socket) {\r\n\t\tlet nnets = this;\r\n\t\tlet _node = node;\r\n\t\tlet nodeCtrlSrv = _node.nodeControlService;\r\n\t\tlet nodeConfig = _node.nodeConfiguration.config;\r\n\r\n\t\t\r\n\t\tif (socket == undefined) {\r\n\t\t\tsocket = nodeCtrlSrv.socket;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tnnets._mapControlMessages_OK = true;\r\n\t\t\r\n\t\t// Map event disconnect \r\n\t\tsocket.on('disconnect', function(){\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.getNetInfo);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.NetInfo);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.createDataChannel);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.deleteDataChannel);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.getDataChannelOptions);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.SetDCOptions);\r\n\r\n\r\n//\t\t\t_node.config._nodesNetService = null;\r\n\t\t\tnnets._mapControlMessages_OK = null;\r\n\r\n\t\t  });\r\n\t\t\r\n\t\t// Map message getNetInfo\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.getNetInfo, function(msg){\r\n\t\t\tnnets._msg_getNetInfo(msg, socket, {\r\n\t\t\t\t\"node\" : nodeConfig.nodeID,\r\n\t\t\t\t\"socket\" : socket\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n//\t\t// Map message NetInfo\r\n//\t\tsocket.on(nnets.CONSTANTS.Messages.NetInfo, function(msg){\r\n//\t\t\tnnets._msg_getNetInfo(msg, socket, {\r\n//\t\t\t\t\"node\" : _node.config.nodeID,\r\n//\t\t\t\t\"socket\" : socket\r\n//\t\t\t});\r\n//\t\t  });\r\n\t\t\r\n\t\t// Map message createDataChannel\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.createDataChannel, function(msg){\r\n\t\t\tnnets._msg_createDataChannel(msg, socket, msg);\r\n\t\t  });\t\r\n\t\r\n\t\t// Map message deleteDataChannel\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.deleteDataChannel, function(msg){\r\n\t\t\tnnets._msg_deleteDataChannel(msg, socket, msg);\r\n\t\t  });\t\r\n\t\t\r\n\t\t// Map message getDataChannelOptions\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.getDataChannelOptions, function(msg){\r\n\t\t\tnnets._msg_getDataChannelOptions(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\": msg.channelID\r\n\t\t\t});\r\n\t\t  });\t\r\n\t\t\r\n\t\t// Map message SetDCOptions\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.SetDCOptions, function(msg){\r\n\t\t\tnnets._msg_SetDCOptions(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\" : msg.channelID,\r\n\t\t\t\t\"options\" : msg.options\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._mapControlMessages');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getNetInfo\r\n\t */\r\n\t_msg_getNetInfo(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_getNetInfo');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\tvar message = {};\r\n\t\t\r\n\t\tmessage.dataChannels = [];\r\n\t\t\r\n\t\tnnetm.channelsList.forEach(function(dch, _i) {\n\t\t\tvar channelInfo = {\r\n\t\t\t\t\t\"id\" : dch.config.id,\r\n\t\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\t\"type\" : dch.config.type\r\n\t\t\t\t};\r\n\t\t\tmessage.dataChannels.push(channelInfo);\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tsocket.emit(nnets.CONSTANTS.Messages.NetInfo, message);\t// Emit message NetInfo\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message createDataChannel\r\n\t */\r\n\t_msg_createDataChannel(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tvar message = {};\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_createDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\tnnetm.addDataChannelToNode(options.channelID, options);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message deleteDataChannel\r\n\t */\r\n\t_msg_deleteDataChannel(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tvar message = {};\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_deleteDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\tnnetm.removeDataChannel(options.channelID);\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_deleteDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getDataChannelOptions\r\n\t */\r\n\t_msg_getDataChannelOptions(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_getDataChannelOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel == null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\t\r\n\t\t\tlet message = {\r\n\t\t\t\t\"channelID\" : options.channelID,\r\n\t\t\t\t\"options\" : {\r\n\t\t\t\t\t\"type\" : dch.config.type,\r\n\t\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\t\"state\" : dch.config._netState,\r\n\t\t\t\t\t\"loopTime\" : dch.config.loopTime,\r\n\t\t\t\t\t\"netLocation\" : dch.config.netLocation,\r\n\t\t\t\t\t\"socketPort\" : dch.config.socketPort\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tsocket.emit(nnets.CONSTANTS.Messages.DataChannelOptions, message);\t// Emit message DataChannelOptions\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_getDataChannelOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message SetDCOptions\r\n\t */\r\n\t_msg_SetDCOptions(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_SetDCOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel == null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\tlet _options = options.options;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tnnetm.setDCOptions(dch, _options);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow \"Cannot set data channel options. \" + e;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet message = {\r\n\t\t\t\t\t\"channelID\" : options.channelID\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\tsocket.emit(nnets.CONSTANTS.Messages.DCOptionsUpdated, message);\t// Emit message DCOptionsUpdated\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_SetDCOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nmodule.exports = NodeNetService;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}