{"version":3,"sources":["nodeEngine/ST_Node.js"],"names":[],"mappings":"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","file":"nodeEngine/ST_Node.js","sourcesContent":["\"use strict\";\r\n\r\n/*\r\n ST Node\r\n SomeThings Node\r\n\r\n\r\n- Provides the main class of ST node\r\n- Load configuration\r\n- Start managers\r\n- Start services\r\n- byebye for shutdown\r\n\r\n*/\r\n\r\n\r\n/**\r\n * import NodeConfiguration\r\n * @ignore\r\n */\r\nlet NodeConfiguration = require('./NodeConfiguration.js');\r\n\r\n\r\n/**\r\n * import STEngines\r\n * @ignore\r\n */\r\nlet STEngines = require('st.engines');\r\n\r\n/**\r\n * import NodeControlService\r\n * @ignore\r\n */\r\nlet NodeControlService = require('./NodeControlService.js');\r\n\r\n\r\n/**\r\n * import Services\r\n * @ignore\r\n */\r\nlet Services = require('st.network').get_Services();\r\n\r\n/**\r\n * import NodeNetManager\r\n * @ignore\r\n */\r\nlet NodeNetManager = Services.get_NodeNetManager();\r\n\r\n/**\r\n * import NodeNetService\r\n * @ignore\r\n */\r\nlet NodeNetService = Services.get_NodeNetService();\r\n\r\n\r\n/**\r\n * import COMSystem\r\n * @ignore\r\n */\r\nlet COMSystem = require('st.network').get_COMSystem_Lib();\r\n\r\n/**\r\n * import readline\r\n * @ignore\r\n */\r\nconst readline = require('readline');\r\n\r\n\r\n/**\r\n * STNode\r\n * \r\n * @class\r\n * @memberof st.nodeEngine\r\n * \r\n * @property {Node} stNode - Node\r\n * @property {object} nodeConfiguration - Node configuration object\r\n * @property {SensorsManager} sensorsManager - Sensors manager\r\n * @property {ActuatorsManager} actuatorsManager - Actuators manager\r\n * @property {EnginesSystem} ngSYS - Engines System object\r\n * @property {NodeControlService} nodeControlService - Node Control service\r\n * @property {NodeNetManager} nodeNetManager - Node Net manager\r\n * @property {NodeNetService} nodeNetService - Node Net service\r\n * @property {COMSystem} comSYS - COM System object\r\n * @property {object} miniCLI - miniCLI object\r\n * \r\n */\r\nclass STNode {\r\n\t\r\n\t/**\r\n\t * \r\n\t * @constructs STNode\r\n\t */\r\n\tconstructor() {\r\n\t\t\r\n\t\tlet stNode = this;\r\n\t\t\r\n\t\tstNode.nodeConfiguration = null;\r\n\t\t\r\n\t\tstNode.sensorsManager = null;\r\n\t\tstNode.actuatorsManager = null;\r\n\t\t\r\n\t\tstNode.ngSYS = null;\r\n\t\t\r\n\t\tstNode.nodeControlService = null;\r\n\t\t\r\n\t\tstNode.nodeNetManager = null;\r\n\t\tstNode.nodeNetService = null;\r\n\r\n\t\tstNode.comSYS = null;\r\n\t\t\r\n\t\tstNode.miniCLI = null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize ST Node\r\n\t */\r\n\tinit_Node() {\r\n\t\t\r\n\t\tlet node = this;\r\n\t\t\r\n\t\tnode.loadConfig();\r\n\t\t\r\n\t\ttry {\r\n\t\t\tnode._init_NodeControlService();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Error in control service. \" + e;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tnode._init_EnginesSystem();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Error in engines system. \" + e;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Load configuration\r\n\t */\r\n\tloadConfig() {\r\n\r\n\t\tlet stNode = this;\r\n\t\t\r\n\t\tif (stNode.nodeConfiguration !== null) {\r\n\t\t\tthrow 'Node configuration is loaded.';\r\n\t\t}\r\n\t\t\r\n\t\t// --- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Node configuration \r\n\t\t// -------------------------------------------------------------------------------|\\/|---\r\n\t\tstNode.nodeConfiguration = new NodeConfiguration();\r\n\r\n\t\tstNode.nodeConfiguration.readFile();\r\n\r\n\t\tif (stNode.nodeConfiguration.config === null) {\r\n\t\t\t\r\n\t\t\tconsole.log('Error in configuration');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tprocess.exit(0);\r\n//\t\t\treturn -1;\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t\r\n\t\tconsole.log('<*> ST Node');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(' <~~~> nodeConfiguration');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(stNode.nodeConfiguration.config);\t// TODO REMOVE DEBUG LOG\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Node Control Service\r\n\t */\r\n\t_init_NodeControlService() {\r\n\t\t\r\n\t\tlet stNode = this;\r\n\t\t\r\n\t\tif (stNode.nodeControlService !== null) {\r\n\t\t\tthrow 'Node Control Service initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Node control Service \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\t\tstNode.nodeControlService = new NodeControlService( stNode.nodeConfiguration.config );\r\n\r\n\t\tstNode.nodeControlService.eventEmitter.on( stNode.nodeControlService.CONSTANTS.Events.ConnectedToServer, function(data){\r\n\t\t\tconsole.log('<*> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.ConnectedToServer');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\tstNode.nodeControlService.eventEmitter.on( stNode.nodeControlService.CONSTANTS.Events.DisconnectedFromServer, function(data){\r\n\t\t\tconsole.log('<*> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.DisconnectedFromServer');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\tstNode.nodeControlService.eventEmitter.on( stNode.nodeControlService.CONSTANTS.Events.BadNodeConfig, function(data){\r\n\t\t\tconsole.log('<*> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.BadNodeConfig');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tstNode._byebye();\r\n\t\t});\r\n\t\t\r\n\t\tstNode.nodeControlService.eventEmitter.on( stNode.nodeControlService.CONSTANTS.Events.ShutDownNode, function(data){\r\n\t\t\tconsole.log('<*> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.ShutDownNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tstNode._byebye();\r\n\t\t});\r\n\t\t\r\n\t\tstNode.nodeControlService.connectToServer();\t// Connect to server\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Initialize engines system\r\n\t */\r\n\t_init_EnginesSystem() {\r\n\t\t\r\n\t\tlet stNode = this;\r\n\t\tlet config = stNode.nodeConfiguration.config;\r\n\t\t\r\n\t\tif (stNode.ngSYS !== null) {\r\n\t\t\tthrow 'Engines System initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Set role node & control channel\r\n\t\tlet ngSYSconfig = {\r\n\t\t\t\t\r\n\t\t\t\"role\" : \"Node\",\r\n\t\t\t\"controlChannel\" : stNode.nodeControlService,\r\n\t\t\t\r\n\t\t\t\"sensors\" : config.sensors,\r\n\t\t\t\"actuators\" : config.actuators\r\n\r\n\t\t};\r\n\t\t\r\n\r\n\t\tconsole.log(\"ST Node Engines System\");\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(STEngines);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\ttry {\r\n\t\t\tstNode.ngSYS = STEngines.getEnginesSystem(ngSYSconfig);\r\n\t\t\t\r\n\t\t\tconsole.log(stNode.ngSYS);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\t\r\n\t\t\tstNode.ngSYS.initialize();\r\n\t\t\t\r\n\t\t\tstNode.sensorsManager = stNode.ngSYS.sensorsManager;\r\n\t\t\tstNode.actuatorsManager = stNode.ngSYS.actuatorsManager;\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize engines system. \" + e;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize net manager\r\n\t */\r\n\tinit_NodeNetManager() {\r\n\t\t\r\n\t\tlet node = this;\r\n\t\t\r\n\t\tif (node.nodeNetManager !== null) {\r\n\t\t\tthrow 'Node net manager initialized.';\r\n\t\t}\r\n\t\t\r\n\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Net Manager \r\n\t\tlet ndm_Config = {\r\n\t\t\t\t\"_node\" : node\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\tnode.nodeNetManager = new NodeNetManager(ndm_Config);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize net service\r\n\t */\r\n\tinit_NodeNetService() {\r\n\t\t\r\n\t\tlet node = this;\r\n\t\t\r\n\t\tif (node.nodeNetService !== null) {\r\n\t\t\tthrow 'Node net service initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Net service \r\n\t\tnode.nodeNetService = new NodeNetService(node, node.nodeNetManager);\r\n\t\tnode.nodeNetService.initialize();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize COM system\r\n\t */\r\n\tinit_NodeCOMSystem() {\r\n\t\t\r\n\t\tlet node = this;\r\n\t\t\t\r\n\t\tif (node.comSYS !== null) {\r\n\t\t\tthrow 'Node COM System initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlet socket = node.nodeControlService.socket;\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// COM System \r\n\t\tlet comSYS_Config = {\r\n\t\t\t\"controlChannel\" : socket,\r\n\t\t\t\"role\" : \"Node\",\r\n\t\t\t\"sensorManager\" : node.sensorsManager,\r\n\t\t\t\"actuatorsManager\" : node.actuatorsManager\r\n\t\t};\r\n\t\t\r\n\t\tnode.comSYS = COMSystem.getCOMSystem(comSYS_Config);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tnode.comSYS.initialize();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('<EEE> ST Node.init_NodeCOMSystem');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> ' + e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\tnode._byebye();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Byebye\r\n\t */\r\n\t_byebye() {\r\n\t\t\r\n\t\tlet node = this;\r\n\t\t\r\n\t\tconsole.log('Have a great day!');\t// TODO REMOVE DEBUG LOG\r\n\t\t  \r\n\t\tnode.nodeControlService.disconnectFromServer();\r\n\t\tnode.sensorsManager.turnOffSensors();\r\n\t\tnode.actuatorsManager.turnOffActuators();\r\n\t\t  \r\n\t\tprocess.exit(0);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Mini CLI\r\n\t */\r\n\tinit_MiniCLI() {\r\n\t\t\r\n\t\tlet stNode = this;\r\n\t\t\r\n\t\tif (stNode.miniCLI !== null) {\r\n\t\t\tthrow 'Mini CLI initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tstNode.miniCLI = readline.createInterface(process.stdin, process.stdout);\r\n\t\tstNode.miniCLI.setPrompt('ST.Node> ');\r\n\t\tstNode.miniCLI.prompt();\r\n\r\n\t\tstNode.miniCLI.on('line', function(line) {\r\n\t\t\tlet line_ = line.trim();\r\n\t\t\tlet _line_ = line_.split(\" \");\r\n\t\t\tif (_line_.length > 1) {\r\n\t\t\t\tline_ = _line_[0];\r\n\t\t\t}\r\n\t\t  switch(line_) {\r\n\t\t  \r\n//\t\t    case 'hello':\r\n//\t\t        console.log('world!');\r\n//\t\t        break;\r\n\t        \r\n\t\t  case 'exit':\r\n\t\t\t  stNode._byebye();\r\n\t\t\t  break;\r\n\t\t  \r\n\t\t  \tcase 'sensor':\r\n\t\t  \t\t\r\n\t\t  \t\tlet sensorSearch = null;\r\n\t\t  \t\t\r\n\t\t  \t\tif (_line_.length === 1) {\r\n\t\t  \t\t\tconsole.log('<*>Sensor List');\r\n\t\t  \t\t\tconsole.log(stNode.sensorsManager.sensorList);\r\n\t\t  \t\t} else {\r\n\t\t  \t\t\t\r\n\t\t  \t\t\t\r\n\t\t  \t\t\tswitch (_line_[1]) {\r\n\t\t\t\t\tcase 'start':\r\n\t\t\t  \t\t\tconsole.log('<*>Sensor Start');\r\n\t\t\t  \t\t\t\r\n\t\t\t  \t\t\tsensorSearch = stNode.sensorsManager.getSensorByID(_line_[2]);\r\n\t\t\t  \t\t\tif (sensorSearch.STsensor === null) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor not found');\r\n\t\t\t  \t\t\t}\r\n\t\t\t  \t\t\t\r\n\t\t\t  \t\t\ttry {\r\n\t\t\t\t  \t\t\tsensorSearch.STsensor.sensorEngine.startEngine();\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor Error at startEngine');\r\n\t\t\t\t  \t\t\tconsole.log(e.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t  \t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase 'stop':\r\n\t\t\t  \t\t\tconsole.log('<*>Sensor Stop');\r\n\r\n\t\t\t  \t\t\tsensorSearch = stNode.sensorsManager.getSensorByID(_line_[2]);\r\n\t\t\t  \t\t\tif (sensorSearch.STsensor === null) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor not found');\r\n\t\t\t  \t\t\t}\r\n\t\t\t  \t\t\t\r\n\t\t\t  \t\t\ttry {\r\n\t\t\t\t  \t\t\tsensorSearch.STsensor.sensorEngine.stopEngine();\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor Error at stopEngine');\r\n\t\t\t\t  \t\t\tconsole.log(e.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t  \t\t\tconsole.log('<*>Sensor');\r\n\t\t  \t\t\t    console.log(' <EEE>Bad parameter');\r\n\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t  \t\t\t\r\n\t\t  \t\t}\r\n\t\t  \t\tbreak;\r\n\t\t  \t\r\n\t\t  \t\r\n\t\t    default:\r\n\t\t    \tif (line_ !== '') {\r\n\t\t    \t      console.log('>???> Say what? I might have heard `' + line_ + '`');\r\n\t\t    \t}\r\n\t\t      break;\r\n\t\t  }\r\n\t\t  \r\n\t\t  stNode.miniCLI.prompt();\r\n\t\t  \r\n\t\t}).on('close', function() {\r\n\t\t\tstNode._byebye();\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = STNode;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}