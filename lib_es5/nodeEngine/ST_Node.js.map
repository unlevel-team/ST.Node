{"version":3,"sources":["nodeEngine/ST_Node.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAgBA;;;;AACA;;;AAIA,IAAI,oBAAoB,QAAQ,wBAAR,CAAxB;;AAEA,IAAI,iBAAiB,QAAQ,qBAAR,EAA+B,cAApD;AACA,IAAI,mBAAmB,QAAQ,uBAAR,EAAiC,gBAAxD;;AAEA,IAAI,qBAAqB,QAAQ,yBAAR,CAAzB;;AAEA,IAAI,iBAAiB,QAAQ,qBAAR,CAArB;AACA,IAAI,iBAAiB,QAAQ,qBAAR,CAArB;;AAIA,IAAM,WAAW,QAAQ,UAAR,CAAjB;;;;;;IAMM,M;AAEL,mBAAc;AAAA;;AACb,OAAK,iBAAL,GAAyB,IAAzB;;AAEA,OAAK,cAAL,GAAsB,IAAtB;AACA,OAAK,gBAAL,GAAwB,IAAxB;AACA,OAAK,kBAAL,GAA0B,IAA1B;;AAEA,OAAK,cAAL,GAAsB,IAAtB;AACA,OAAK,cAAL,GAAsB,IAAtB;;AAGA,OAAK,OAAL,GAAe,IAAf;AACA;;;;;;;;;8BAKW;AACX,QAAK,UAAL;;AAEA,QAAK,mBAAL;AACA,QAAK,qBAAL;AACA;;;;;;;;+BAKY;;AAEZ,OAAI,KAAK,iBAAL,IAA0B,IAA9B,EAAoC;AACnC,UAAM,+BAAN;AACA;;;;;AAKD,QAAK,iBAAL,GAAyB,IAAI,iBAAJ,EAAzB;;AAEA,QAAK,iBAAL,CAAuB,QAAvB;;AAEA,OAAI,KAAK,iBAAL,CAAuB,MAAvB,IAAiC,IAArC,EAA2C;;AAE1C,YAAQ,GAAR,CAAY,wBAAZ,E;;AAEA,YAAQ,IAAR,CAAa,CAAb;;AAGA;AACD,WAAQ,GAAR,CAAY,eAAZ,E;AACA,WAAQ,GAAR,CAAY,0BAAZ,E;AACA,WAAQ,GAAR,CAAY,KAAK,iBAAL,CAAuB,MAAnC,E;;AAEA;;;;;;;;wCAMqB;;AAErB,OAAI,KAAK,cAAL,IAAuB,IAA3B,EAAiC;AAChC,UAAM,8BAAN;AACA;;;;;AAKD,QAAK,cAAL,GAAsB,IAAI,cAAJ,EAAtB;;AAEA,OAAI,OAAO,KAAK,cAAhB;AACA,OAAI,aAAa,KAAK,iBAAL,CAAuB,MAAxC;;AAEA,OAAI,WAAW,OAAX,IAAsB,IAAtB,IACF,WAAW,OAAX,CAAmB,MAAnB,GAA4B,CAD9B,EACiC;;AAEhC,eAAW,OAAX,CAAmB,OAAnB,CAA2B,UAAS,IAAT,EAAe,EAAf,EAAmB;AAC7C,UAAK,SAAL,CAAe,IAAf;AACA,KAFD;;AAKA,YAAQ,GAAR,CAAa,8BAAb,E;AACA,YAAQ,GAAR,CAAa,WAAW,OAAxB,E;AACA,YAAQ,GAAR,CAAa,KAAK,UAAlB,E;AACA;;AAGD;;;;;;;;0CAMuB;;AAEvB,OAAI,KAAK,gBAAL,IAAyB,IAA7B,EAAmC;AAClC,UAAM,gCAAN;AACA;;;;;AAKD,QAAK,gBAAL,GAAwB,IAAI,gBAAJ,EAAxB;;AAEA,OAAI,OAAO,KAAK,gBAAhB;AACA,OAAI,aAAa,KAAK,iBAAL,CAAuB,MAAxC;;AAEA,OAAI,WAAW,SAAX,IAAwB,IAAxB,IACF,WAAW,SAAX,CAAqB,MAArB,GAA8B,CADhC,EACmC;;AAElC,eAAW,SAAX,CAAqB,OAArB,CAA6B,UAAS,IAAT,EAAe,EAAf,EAAmB;AAC/C,UAAK,WAAL,CAAiB,IAAjB;AACA,KAFD;;AAIA,YAAQ,GAAR,CAAa,gCAAb,E;AACA,YAAQ,GAAR,CAAa,WAAW,SAAxB,E;AACA,YAAQ,GAAR,CAAa,KAAK,aAAlB,E;AACA;;AAGD;;;;;;;;4CAMyB;;AAEzB,OAAI,KAAK,kBAAL,IAA2B,IAA/B,EAAqC;AACpC,UAAM,mCAAN;AACA;;AAED,OAAI,SAAS,IAAb;;;;;AAKA,QAAK,kBAAL,GAA0B,IAAI,kBAAJ,CAAwB,KAAK,iBAAL,CAAuB,MAA/C,CAA1B;;AAEA,QAAK,kBAAL,CAAwB,YAAxB,CAAqC,EAArC,CAAyC,KAAK,kBAAL,CAAwB,SAAxB,CAAkC,MAAlC,CAAyC,iBAAlF,EAAqG,UAAS,IAAT,EAAc;AAClH,YAAQ,GAAR,CAAY,kCAAZ,E;AACA,YAAQ,GAAR,CAAY,iCAAZ,E;AAEA,IAJD;;AAMA,QAAK,kBAAL,CAAwB,YAAxB,CAAqC,EAArC,CAAyC,KAAK,kBAAL,CAAwB,SAAxB,CAAkC,MAAlC,CAAyC,sBAAlF,EAA0G,UAAS,IAAT,EAAc;AACvH,YAAQ,GAAR,CAAY,kCAAZ,E;AACA,YAAQ,GAAR,CAAY,sCAAZ,E;AAEA,IAJD;;AAMA,QAAK,kBAAL,CAAwB,YAAxB,CAAqC,EAArC,CAAyC,KAAK,kBAAL,CAAwB,SAAxB,CAAkC,MAAlC,CAAyC,aAAlF,EAAiG,UAAS,IAAT,EAAc;AAC9G,YAAQ,GAAR,CAAY,kCAAZ,E;AACA,YAAQ,GAAR,CAAY,6BAAZ,E;;AAEA,WAAO,OAAP;AACA,IALD;;AAOA,QAAK,kBAAL,CAAwB,YAAxB,CAAqC,EAArC,CAAyC,KAAK,kBAAL,CAAwB,SAAxB,CAAkC,MAAlC,CAAyC,YAAlF,EAAgG,UAAS,IAAT,EAAc;AAC7G,YAAQ,GAAR,CAAY,kCAAZ,E;AACA,YAAQ,GAAR,CAAY,4BAAZ,E;;AAEA,WAAO,OAAP;AACA,IALD;AAMA,QAAK,kBAAL,CAAwB,eAAxB,G;AACA,QAAK,cAAL,CAAoB,qBAApB,CAA2C,KAAK,kBAAhD,E;AACA,QAAK,gBAAL,CAAsB,qBAAtB,CAA6C,KAAK,kBAAlD,E;;AAEA;;;;;;;;wCAMqB;;AAErB,OAAI,KAAK,cAAL,IAAuB,IAA3B,EAAiC;AAChC,UAAM,+BAAN;AACA;;AAED,OAAI,OAAO,IAAX;;;;;AAKA,OAAI,aAAa;AACf,aAAU;AADK,IAAjB;;AAIA,QAAK,cAAL,GAAsB,IAAI,cAAJ,CAAmB,UAAnB,CAAtB;;AAEA;;;;;;;;wCAMqB;;AAErB,OAAI,KAAK,cAAL,IAAuB,IAA3B,EAAiC;AAChC,UAAM,+BAAN;AACA;;AAED,OAAI,OAAO,IAAX;;;;;AAKA,QAAK,cAAL,GAAsB,IAAI,cAAJ,CAAmB,IAAnB,EAAyB,KAAK,cAA9B,CAAtB;AACA,QAAK,cAAL,CAAoB,UAApB;;AAEA;;;;;;;;4BAMS;AACP,WAAQ,GAAR,CAAY,mBAAZ;;AAEA,QAAK,kBAAL,CAAwB,oBAAxB;AACA,QAAK,cAAL,CAAoB,cAApB;AACA,QAAK,gBAAL,CAAsB,gBAAtB;;AAEA,WAAQ,IAAR,CAAa,CAAb;AACF;;;;;;;;iCAMc;;AAEd,OAAI,KAAK,OAAL,IAAgB,IAApB,EAA0B;AACzB,UAAM,uBAAN;AACA;;AAED,OAAI,SAAS,IAAb;;AAEA,QAAK,OAAL,GAAe,SAAS,eAAT,CAAyB,QAAQ,KAAjC,EAAwC,QAAQ,MAAhD,CAAf;AACA,QAAK,OAAL,CAAa,SAAb,CAAuB,UAAvB;AACA,QAAK,OAAL,CAAa,MAAb;;AAEA,QAAK,OAAL,CAAa,EAAb,CAAgB,MAAhB,EAAwB,UAAS,IAAT,EAAe;AACtC,QAAI,QAAQ,KAAK,IAAL,EAAZ;AACA,QAAI,SAAS,MAAM,KAAN,CAAY,GAAZ,CAAb;AACA,QAAI,OAAO,MAAP,GAAgB,CAApB,EAAuB;AACtB,aAAQ,OAAO,CAAP,CAAR;AACA;AACA,YAAO,KAAP;;;;;;AAMA,UAAK,MAAL;AACC,aAAO,OAAP;AACA;;AAEA,UAAK,QAAL;;AAEC,UAAI,eAAe,IAAnB;;AAEA,UAAI,OAAO,MAAP,IAAiB,CAArB,EAAwB;AACvB,eAAQ,GAAR,CAAY,gBAAZ;AACA,eAAQ,GAAR,CAAY,OAAO,cAAP,CAAsB,UAAlC;AACA,OAHD,MAGO;;AAGN,eAAQ,OAAO,CAAP,CAAR;AACF,aAAK,OAAL;AACG,iBAAQ,GAAR,CAAY,iBAAZ;;AAEA,wBAAe,OAAO,cAAP,CAAsB,aAAtB,CAAoC,OAAO,CAAP,CAApC,CAAf;AACA,aAAI,aAAa,QAAb,IAAyB,IAA7B,EAAmC;AAClC,kBAAQ,GAAR,CAAY,wBAAZ;AACA;;AAED,aAAI;AACH,uBAAa,QAAb,CAAsB,YAAtB,CAAmC,WAAnC;AACF,UAFC,CAEA,OAAO,CAAP,EAAU;AACT,kBAAQ,GAAR,CAAY,mCAAZ;AACA,kBAAQ,GAAR,CAAY,EAAE,OAAd;AACF;;AAED;;AAED,aAAK,MAAL;AACG,iBAAQ,GAAR,CAAY,gBAAZ;;AAEA,wBAAe,OAAO,cAAP,CAAsB,aAAtB,CAAoC,OAAO,CAAP,CAApC,CAAf;AACA,aAAI,aAAa,QAAb,IAAyB,IAA7B,EAAmC;AAClC,kBAAQ,GAAR,CAAY,wBAAZ;AACA;;AAED,aAAI;AACH,uBAAa,QAAb,CAAsB,YAAtB,CAAmC,UAAnC;AACF,UAFC,CAEA,OAAO,CAAP,EAAU;AACT,kBAAQ,GAAR,CAAY,kCAAZ;AACA,kBAAQ,GAAR,CAAY,EAAE,OAAd;AACF;AACD;;AAED;AACG,iBAAQ,GAAR,CAAY,WAAZ;AACG,iBAAQ,GAAR,CAAY,qBAAZ;;AAGL;AAvCC;AA0CA;AACD;;AAGA;AACC,UAAI,SAAS,EAAb,EAAiB;AACX,eAAQ,GAAR,CAAY,yCAAyC,KAAzC,GAAiD,GAA7D;AACL;AACA;AAtEJ;;AAyEA,WAAO,OAAP,CAAe,MAAf;AAED,IAjFD,EAiFG,EAjFH,CAiFM,OAjFN,EAiFe,YAAW;AACzB,WAAO,OAAP;AACA,IAnFD;AAqFA;;;;;;AAIF,OAAO,OAAP,GAAiB,MAAjB","file":"nodeEngine/ST_Node.js","sourcesContent":["\"use strict\";\r\n\r\n/*\r\n ST Node\r\n SomeThings Node\r\n\r\n\r\n- Provides the main class of ST node\r\n- Load configuration\r\n- Start managers\r\n- Start services\r\n- byebye for shutdown\r\n\r\n*/\r\n\r\n// Gulp tricks\r\nimport { install } from 'source-map-support';\r\ninstall();\r\n\r\n\r\n// require our modules\r\nvar NodeConfiguration = require('./NodeConfiguration.js');\r\n\r\nvar SensorsManager = require('./SensorsManager.js').SensorsManager;\r\nvar ActuatorsManager = require('./ActuatorsManager.js').ActuatorsManager;\r\n\r\nvar NodeControlService = require('./NodeControlService.js');\r\n\r\nvar NodeNetManager = require('./NodeNetManager.js');\r\nvar NodeNetService = require('./NodeNetService.js');\r\n\r\n\r\n\r\nconst readline = require('readline');\r\n\r\n\r\n/**\r\n * STNode\r\n */\r\nclass STNode {\r\n\t\r\n\tconstructor() {\r\n\t\tthis.nodeConfiguration = null;\r\n\t\t\r\n\t\tthis.sensorsManager = null;\r\n\t\tthis.actuatorsManager = null;\r\n\t\tthis.nodeControlService = null;\r\n\t\t\r\n\t\tthis.nodeNetManager = null;\r\n\t\tthis.nodeNetService = null;\r\n\r\n\t\t\r\n\t\tthis.miniCLI = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize ST Node\r\n\t */\r\n\tinit_Node() {\r\n\t\tthis.loadConfig();\r\n\t\t\r\n\t\tthis.init_SensorsManager();\r\n\t\tthis.init_ActuatorsManager();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load configuration\r\n\t */\r\n\tloadConfig() {\r\n\r\n\t\tif (this.nodeConfiguration != null) {\r\n\t\t\tthrow 'Node configuration is loaded.';\r\n\t\t}\r\n\t\t\r\n\t\t// --- ¨¨ --- ¨¨ --- ¨¨ --- ¨¨ --- \r\n\t\t// Node configuration \r\n\t\t// -------------------------------------------------------------------------------|\\/|---\r\n\t\tthis.nodeConfiguration = new NodeConfiguration();\r\n\r\n\t\tthis.nodeConfiguration.readFile();\r\n\r\n\t\tif (this.nodeConfiguration.config == null) {\r\n\t\t\t\r\n\t\t\tconsole.log('Error in configuration');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tprocess.exit(0);\r\n//\t\t\treturn -1;\r\n\t\t\t\r\n\t\t}\r\n\t\tconsole.log('<···> ST Node');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(' <···> nodeConfiguration');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(this.nodeConfiguration.config);\t// TODO REMOVE DEBUG LOG\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Sensors manager\r\n\t */\r\n\tinit_SensorsManager() {\r\n\t\t\r\n\t\tif (this.sensorsManager != null) {\r\n\t\t\tthrow 'Sensors manager initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t//--- ¨¨ --- ¨¨ --- ¨¨ --- ¨¨ --- \r\n\t\t// Sensors Manager \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\t\tthis.sensorsManager = new SensorsManager();\r\n\t\t\r\n\t\tlet snsm = this.sensorsManager;\r\n\t\tlet nodeConfig = this.nodeConfiguration.config;\r\n\r\n\t\tif (nodeConfig.sensors != null && \r\n\t\t\t\tnodeConfig.sensors.length > 0) {\r\n\t\t\t\r\n\t\t\tnodeConfig.sensors.forEach(function(sns_, _i) {\r\n\t\t\t\tsnsm.addSensor(sns_);\r\n\t\t\t});\r\n\r\n\t\t\t\r\n\t\t\tconsole.log( '<···> ST Node.sensorsManager' );\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log( nodeConfig.sensors );\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log( snsm.sensorList );\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Actuators manager\r\n\t */\r\n\tinit_ActuatorsManager() {\r\n\t\t\r\n\t\tif (this.actuatorsManager != null) {\r\n\t\t\tthrow 'Actuators manager initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t//--- ¨¨ --- ¨¨ --- ¨¨ --- ¨¨ --- \r\n\t\t// Actuators Manager \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\t\tthis.actuatorsManager = new ActuatorsManager();\r\n\t\t\r\n\t\tlet actm = this.actuatorsManager;\r\n\t\tlet nodeConfig = this.nodeConfiguration.config;\r\n\r\n\t\tif (nodeConfig.actuators != null && \r\n\t\t\t\tnodeConfig.actuators.length > 0) {\r\n\t\t\t\r\n\t\t\tnodeConfig.actuators.forEach(function(act_, _i) {\n\t\t\t\tactm.addActuator(act_);\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconsole.log( '<···> ST Node.actuatorsManager' );\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log( nodeConfig.actuators );\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log( actm.actuatorsList );\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Node Control Service\r\n\t */\r\n\tinit_NodeControlService() {\r\n\t\t\r\n\t\tif (this.nodeControlService != null) {\r\n\t\t\tthrow 'Node Control Service initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tlet stNode = this;\r\n\t\t\r\n\t\t//--- ¨¨ --- ¨¨ --- ¨¨ --- ¨¨ --- \r\n\t\t// Node control Service \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\t\tthis.nodeControlService = new NodeControlService( this.nodeConfiguration.config );\r\n\r\n\t\tthis.nodeControlService.eventEmitter.on( this.nodeControlService.CONSTANTS.Events.ConnectedToServer, function(data){\r\n\t\t\tconsole.log('<···> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <···> Events.ConnectedToServer');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\tthis.nodeControlService.eventEmitter.on( this.nodeControlService.CONSTANTS.Events.DisconnectedFromServer, function(data){\r\n\t\t\tconsole.log('<···> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <···> Events.DisconnectedFromServer');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\tthis.nodeControlService.eventEmitter.on( this.nodeControlService.CONSTANTS.Events.BadNodeConfig, function(data){\r\n\t\t\tconsole.log('<···> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <···> Events.BadNodeConfig');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tstNode._byebye();\r\n\t\t});\r\n\t\t\r\n\t\tthis.nodeControlService.eventEmitter.on( this.nodeControlService.CONSTANTS.Events.ShutDownNode, function(data){\r\n\t\t\tconsole.log('<···> ST Node.nodeControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <···> Events.ShutDownNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tstNode._byebye();\r\n\t\t});\r\n\t\tthis.nodeControlService.connectToServer();\t// Connect to server\r\n\t\tthis.sensorsManager.setNodeControlService( this.nodeControlService );\t// bind to Sensors manager\r\n\t\tthis.actuatorsManager.setNodeControlService( this.nodeControlService );\t// bind to Actuators manager\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Initialize net manager\r\n\t */\r\n\tinit_NodeNetManager() {\r\n\t\t\r\n\t\tif (this.nodeNetManager != null) {\r\n\t\t\tthrow 'Node net manager initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tlet node = this;\r\n\r\n\t\t//--- ¨¨ --- ¨¨ --- ¨¨ --- ¨¨ --- \r\n\t\t// Net Manager \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\t\tvar ndm_Config = {\r\n\t\t\t\t\"_node\" : node\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\tnode.nodeNetManager = new NodeNetManager(ndm_Config);\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize net service\r\n\t */\r\n\tinit_NodeNetService() {\r\n\t\t\r\n\t\tif (this.nodeNetService != null) {\r\n\t\t\tthrow 'Node net service initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tlet node = this;\r\n\t\t\r\n\t\t//--- ¨¨ --- ¨¨ --- ¨¨ --- ¨¨ --- \r\n\t\t// Net service \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\t\tthis.nodeNetService = new NodeNetService(node, node.nodeNetManager);\r\n\t\tthis.nodeNetService.initialize();\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Byebye\r\n\t */\r\n\t_byebye() {\r\n\t\t  console.log('Have a great day!');\r\n\t\t  \r\n\t\t  this.nodeControlService.disconnectFromServer();\r\n\t\t  this.sensorsManager.turnOffSensors();\r\n\t\t  this.actuatorsManager.turnOffActuators();\r\n\t\t  \r\n\t\t  process.exit(0);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Mini CLI\r\n\t */\r\n\tinit_MiniCLI() {\r\n\t\t\r\n\t\tif (this.miniCLI != null) {\r\n\t\t\tthrow 'Mini CLI initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tlet stNode = this;\r\n\t\t\r\n\t\tthis.miniCLI = readline.createInterface(process.stdin, process.stdout);\r\n\t\tthis.miniCLI.setPrompt('STNode> ');\r\n\t\tthis.miniCLI.prompt();\r\n\r\n\t\tthis.miniCLI.on('line', function(line) {\r\n\t\t\tvar line_ = line.trim();\r\n\t\t\tvar _line_ = line_.split(\" \");\r\n\t\t\tif (_line_.length > 1) {\r\n\t\t\t\tline_ = _line_[0];\r\n\t\t\t}\r\n\t\t  switch(line_) {\r\n\t\t  \r\n//\t\t    case 'hello':\r\n//\t\t        console.log('world!');\r\n//\t\t        break;\r\n\t        \r\n\t\t  case 'exit':\r\n\t\t\t  stNode._byebye();\r\n\t\t\t  break;\r\n\t\t  \r\n\t\t  \tcase 'sensor':\r\n\t\t  \t\t\r\n\t\t  \t\tlet sensorSearch = null;\r\n\t\t  \t\t\r\n\t\t  \t\tif (_line_.length == 1) {\r\n\t\t  \t\t\tconsole.log('<*>Sensor List');\r\n\t\t  \t\t\tconsole.log(stNode.sensorsManager.sensorList);\r\n\t\t  \t\t} else {\r\n\t\t  \t\t\t\r\n\t\t  \t\t\t\r\n\t\t  \t\t\tswitch (_line_[1]) {\r\n\t\t\t\t\tcase 'start':\r\n\t\t\t  \t\t\tconsole.log('<*>Sensor Start');\r\n\t\t\t  \t\t\t\r\n\t\t\t  \t\t\tsensorSearch = stNode.sensorsManager.getSensorByID(_line_[2]);\r\n\t\t\t  \t\t\tif (sensorSearch.STsensor == null) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor not found');\r\n\t\t\t  \t\t\t}\r\n\t\t\t  \t\t\t\r\n\t\t\t  \t\t\ttry {\r\n\t\t\t\t  \t\t\tsensorSearch.STsensor.sensorEngine.startEngine();\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor Error at startEngine');\r\n\t\t\t\t  \t\t\tconsole.log(e.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t  \t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase 'stop':\r\n\t\t\t  \t\t\tconsole.log('<*>Sensor Stop');\r\n\r\n\t\t\t  \t\t\tsensorSearch = stNode.sensorsManager.getSensorByID(_line_[2]);\r\n\t\t\t  \t\t\tif (sensorSearch.STsensor == null) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor not found');\r\n\t\t\t  \t\t\t}\r\n\t\t\t  \t\t\t\r\n\t\t\t  \t\t\ttry {\r\n\t\t\t\t  \t\t\tsensorSearch.STsensor.sensorEngine.stopEngine();\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t  \t\t\tconsole.log(' <EEE>Sensor Error at stopEngine');\r\n\t\t\t\t  \t\t\tconsole.log(e.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t  \t\t\tconsole.log('<*>Sensor');\r\n\t\t  \t\t\t    console.log(' <EEE>Bad parameter');\r\n\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t  \t\t\t\r\n\t\t  \t\t}\r\n\t\t  \t\tbreak;\r\n\t\t  \t\r\n\t\t  \t\r\n\t\t    default:\r\n\t\t    \tif (line_ != '') {\r\n\t\t    \t      console.log('>???> Say what? I might have heard `' + line_ + '`');\r\n\t\t    \t}\r\n\t\t      break;\r\n\t\t  }\r\n\t\t  \r\n\t\t  stNode.miniCLI.prompt();\r\n\t\t  \r\n\t\t}).on('close', function() {\r\n\t\t\tstNode._byebye();\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = STNode;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNode\\es6"}